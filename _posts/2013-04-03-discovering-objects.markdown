---
layout: post
title:  "Discovering Objects"
date:   2013-04-03 18:35:04
categories: jekyll update
---
You have heard of black holes in space and how they can pull even the biggest stars into their path, essentially destroying them. This is how the first week of Ruby learning felt like. Going from caveman to object creator is not an adventure that average humanoids can manage in a four day span. It was the guidance of experienced space explorers that actually allowed for such a transition. And it was only after properly assessing what had happened during that time span that I managed to understand where that black hole had taken me. It didn't destroy me. It actually teleported me into a parallel universe. A universe were few people have been. A universe where wizards dwell.

From terminal to interpreter. From strings to loops. From blocks to objects. Sounds like playground talk, but when it involves the mortar and pestle of objected oriented programming, it can be serious business.

Having joined a full immersion course I knew I was taking up a challenge that would grow into gargantuan proportions the minute it picked up pace. And as expected by Day 3/4 I was already having some trouble trying to recall every tool in the toolbox. But like any great violinist or any great football player will tell you, practice makes perfect. Putting theory into practice, I tried digesting every piece of information given to us by our space captains, even if it meant staying till 4am at night. But sometimes it just wasn't enough. You see, we are not all wired with the same neural circuit boards, so an engineer could pick up algebra again a lot quicker than a doctor and a lawyer could pick up creative writing a lot faster than an accountant. In the end it is all relative. You know your limits and most importantly you know how to break past those limits. And there was no way I was going to let the initial week of the program turn into the first wall in my path to digital freedom.

The command line interface was ground zero and everything went swift from there until I hit hashes. I wish I was referring to hash browns, because digesting those would have been a lot easier. But when the time came to juggling with keys and values my comprehension just built a knot around itself. It wasn't until I resorted to Pine's learning manifesto that I was able to comprehend the simplicity of such a useful tool. Understanding the concept behind the code is a lot more important than actually being able to replicate it. It's a bit like memorisation. Unless you understand what you are storing in your head, you will never be able to call upon it once that parcel of memory fades away. Some of us might be extremely apt at grabbing a technical concept and diluting it into the bloodstream in such a way that it instantaneously becomes part of our DNA. While the rest rely on visualisation (Codecademy), explanation (Ruby Monk) and deconstruction (StackOverflow) of such concept in order to chew it into that same bloodstream. I took the second path and eventually the river of knowledge started flowing again.

The ball continued to roll until object creation became the focus of our existence. We were instructed to use Ruby as the pinnacle of every other programming language that we had ever laid our eyes upon. It was to be our new credo. No more procedural train of thought. Essentially this became the tip of the first mountain we had to climb. Comprehension and manipulation of such a new form of speech meant complete alienation from concepts that had dominated our understanding in the past. Once again, following the words of the great players and the great musicians, it would be through incessant practice that this way of thinking would be adopted by our subconscious, essentially replacing the block mentality that we so happily played with when Pascal opened the doors into the computer world. I now find myself crawling IRC channels every evening looking for more pieces to the ever growing puzzle of objected oriented programming. Looking for that gate into the new frontier. Innovation prevails.

<img src="http://lightbulbmanifesto.files.wordpress.com/2013/04/wizard-casting-a-spell.jpg?w=580" style="height:400px; width:auto;">