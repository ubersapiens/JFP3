---
layout: post
title:  "Gem filled tracks"
date:   2013-04-12 18:35:04
categories: jekyll update
---
Five more days of an amazing journey seem to have come to an end so much quicker than the first two sets yet it was in this time frame that we first encountered DHH's Frankenstein. We spent the first couple of days building up on an already solid foundation utilising Sinatra, the small server-based domain specific language that allowed us to rejoice at our first web application. With less than two weeks of web development education we had all been able to create movie databases to incite a level amusement that we would have never expected under such a short time span and to compound together pet archiving systems which would have probably IPOed, like Pets.com, had we been living in the 2000 dot com bubble. It all gave us a taste of glory and success. But not for long.

Wednesday began as a normal London day, with cold weather and gray skies, but nothing had prepared me for what I would see in class. What I had conceived as such a simple ecosystem of amalgamated parts, shifting together like icebergs into a frozen continent, suddenly became a puzzle piece dragged out of the depths of Dante's Inferno. Ruby on Rails (RoR), that web framework advertised to the entire planet as the most easy and adaptable funnel of aspiring tech creators, was a long way from being the utopian scaffold to my aspiring digital disruption. One structure containing every single element necessary to plasmate your wildest wishes into a browser.

One Framework to rule them all, One Framework to find them, One Framework to bring them all and in the darkness bind them.

<img src="http://lightbulbmanifesto.files.wordpress.com/2013/04/train.jpg?w=580" style="height:500px; width:auto;">

The train met us head to head on the first meeting. But as the week unfolded. We grew stronger. You see, the trick to learning any skill is to disassemble it in such a way that only the simplest parts lie before your eyes, allowing you to see the interconnections between each one of them and essentially understand what is it that holds them together. RoR facilitated this macro view scenario by holding everything under one roof, yet organising everything following an infrastructure model that was invented in the 70s by the same geniuses that came up with the graphical user interface, the mouse and many other amazing pieces in the futuristic landscape. That place was called Xerox Parc. Model View Controller allowed for the ideal separation between the representation of information and the user's interaction with it. It could be easily seen analogically as follows: the models are the non-stop number crunchers, the views are the beautiful models displaying everything and the controllers are the bossy order-givers. Quite the perfect flow, inside your screen.

All in all the week was filled with surprises. I decided to devote this last paragraph to vent out confusions. Understanding the modifications within the routes.rb files was a bit like having to choose between using Google Maps or just winging it with a paper version; after hours of struggling raking route after route after route and not arriving anywhere I decided to throw in resource magic and my destination just popped up before me. Another main concern became the fact that it was impossible to concentrate on actual code when I had Twitter bootstrap cluttering my entire field of vision; it was the equivalent of seeing the true beauty behind that girl at the club with a kilo of make up on her...fat chance. Other than that, things are beginning to click little by little. I am still far away from dry land, but the red oceans are becoming an enjoyable place to be.